
#pragma kernel CSMain


RWStructuredBuffer<float3> _Positions;
RWStructuredBuffer<float3> _PositionsTemp;//real pos
float _Step;
float _Time;
float _Chaos;

float remap(float s, float a1, float a2, float b1, float b2)
{
    return b1 + (s - a1) * (b2 - b1) / (a2 - a1);
}

float random(in float x)
{
    return frac(sin(x) * 1e4);
}


float3 Wave(float3 realPos , int id)
{
    float rand = random(id);
    
    float power = remap(_Chaos, 0.0, 100.0, 0.0, 1.0);
    return float3(realPos.x + (sin(_Time * rand * 10.0) * power * realPos.y),
                 realPos.y + (rand * _Chaos), 
                 realPos.z + (cos(_Time * rand * 10.0) * power * realPos.y));
}

[numthreads(64, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    _Positions[id.x] = Wave(_PositionsTemp[id.x], id.x);

}

